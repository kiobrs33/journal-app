{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","firebase/firebaseConfig.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRouter.js","routers/PrivateRouter.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","console","log","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newState","handleInputChange","target","value","NotesAppBar","useSelector","useDispatch","date","Date","getTime","noteDate","moment","className","format","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","error","message","logout","JournalEntry","backgroundSize","backgroundImage","JournalEntries","key","Sidebar","signOut","newNote","add","JournalScreen","LoginScreen","valuesForm","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","valid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRouter","isAuthenticated","Component","rest","props","PrivateRouter","localStorage","setItem","location","pathname","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6f1faa68.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload,\r\n            };\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null,\r\n            };\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload,\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    action.payload, ...state.notes\r\n                ]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    ...action.payload,\r\n                ]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(\r\n                    note => note.id !== action.payload,\r\n                )\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null,\r\n            }\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return  {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            }\r\n        case types.logout:\r\n            return  {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBb4WKLMkYhZwd8CHqoXy8VnZ6BoQA94is\",\r\n    authDomain: \"fir-ebc49.firebaseapp.com\",\r\n    projectId: \"fir-ebc49\",\r\n    storageBucket: \"fir-ebc49.appspot.com\",\r\n    messagingSenderId: \"189699025834\",\r\n    appId: \"1:189699025834:web:93ee2864b5a22ecded99d3\",\r\n    measurementId: \"G-PKEG6MXG7G\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase,\r\n}","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dks25ivcf/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            console.log(cloudResp);\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n        // console.log(error);\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data(),\r\n        })\r\n        \r\n    });\r\n\r\n    return notes;\r\n}","import Swal from 'sweetalert2';\r\nimport {db} from '../firebase/firebaseConfig';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        \r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n};\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes,\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update( noteToFirestore );\r\n\r\n        dispatch(refreshNote(note.id, note));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {...note},\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n};\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setValues( newState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    const { active } = useSelector(state => state.notes)\r\n    const dispatch = useDispatch();\r\n    const date = new Date().getTime();\r\n    const noteDate = moment(date);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const files = e.target.files;\r\n        if(files){\r\n            dispatch(startUploading(files[0]));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes-appbar\">\r\n            <h5>{`${noteDate.format('Do')} ${noteDate.format('dddd')}`}</h5>\r\n\r\n            <input\r\n                type=\"file\"\r\n                style={{\r\n                    display: 'none'\r\n                }}\r\n                id=\"fileSelector\"\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [ formValues, handleInputChange, reset ] = useForm(note);\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote(formValues.id, {...formValues, }) );\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    type=\"texta\"\r\n                    placeholder=\"Some happened today\"\r\n                    className=\"notes__textarea\"\r\n                    autoComplete=\"off\"\r\n                    name='body'\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url)\r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={note.url}\r\n                                alt={title}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select  something\r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n});","import Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { types } from \"../types/types\";\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch((error) => {\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error',error.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase\r\n            .auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase\r\n            .auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch((error) => {\r\n                Swal.fire('Error',error.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName,\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout,\r\n    }\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        const newNote = {\r\n            title,\r\n            body,\r\n            date,\r\n            url\r\n        }\r\n        dispatch(activeNote(id, newNote ));\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__bounceInLeft\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize:'cover',\r\n                    backgroundImage:`url(${url})`\r\n                }}\r\n            >\r\n            </div>\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n\r\n                <span> {noteDate.format('dddd')} </span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map((note) => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn mt-5\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar/>\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen/>)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n    console.log(loading);\r\n\r\n    const [ valuesForm, handleInputChange ] = useForm({\r\n        email: 'rene@gmail.com',\r\n        password: '123456',\r\n    });\r\n\r\n    const { email, password } = valuesForm;\r\n\r\n    const handleLogin = (e) => {\r\n        dispatch(startLoginEmailPassword(email, password));\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleGoogleLogin = (e) => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login Screen</h3>\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input  \r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled= { loading }\r\n                >\r\n                   Login \r\n                </button>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Network</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create New Account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport validator from 'validator';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Rene',\r\n        email: 'rene@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        let valid = true;\r\n\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('Name is required'));\r\n            valid = false;\r\n        } \r\n        if(!validator.isEmail(email)){\r\n            dispatch(setError('Email is required'));\r\n            valid = false;\r\n        } \r\n        if(password !== password2 || password.length <= 5){\r\n            dispatch(setError('Password is required'));\r\n            valid = false;\r\n        }\r\n        \r\n        valid && dispatch(removeError());\r\n        return valid;\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already register ?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={LoginScreen} />\r\n                    <Route exact path='/auth/register' component={RegisterScreen} />\r\n\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n    // console.log(rest.location.pathname);\r\n    localStorage.setItem('lastPathname',rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/auth/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport {firebase} from '../firebase/firebaseConfig';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRouter } from './PublicRouter';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [cheking, setCheking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase\r\n            .auth()\r\n            .onAuthStateChanged((user) => {\r\n                if(user?.uid){\r\n                    dispatch(login(user.uid, user.displayName));\r\n                    setIsLoggedIn(true);\r\n\r\n                    //Notes of User\r\n                    dispatch(startLoadingNotes(user.uid));\r\n                }else{\r\n                    setIsLoggedIn(false);\r\n                }\r\n                setCheking(false);\r\n            })\r\n    }, [dispatch, setCheking]);\r\n\r\n    if(cheking){\r\n        return (<h1>En espera</h1>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRouter\r\n                    path='/auth'\r\n                    component={AuthRouter}\r\n                    isAuthenticated={isLoggedIn}\r\n                />\r\n                <PrivateRouter\r\n                    exact\r\n                    path=\"/\"\r\n                    component={JournalScreen}\r\n                    isAuthenticated={isLoggedIn}\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}